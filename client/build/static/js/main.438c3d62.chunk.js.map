{"version":3,"sources":["config/firebase-config.js","components/List/ListRow.js","components/List/ListForm.js","Auth.js","config/url.js","components/List/List.js","components/LoginPage.js","components/modals/CreateListModal.js","components/modals/ImportListModal.js","components/MyLists/MyListRow.js","components/MyLists/MyLists.js","components/Avatar.js","components/Header.js","PrivateRoute.js","App.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ListRow","id","value","completed","toggleCompleted","removeListItem","updateListItem","useState","isEditing","setIsEditing","editedValue","setEditedValue","checkbox","className","onClick","toggleEditing","type","onChange","e","target","ListForm","addListItem","list","itemName","setItemName","name","listName","onSubmit","preventDefault","placeholder","AuthContext","React","createContext","AuthProvider","children","currentUser","setCurrentUser","pending","setPending","useEffect","getAuth","onAuthStateChanged","user","console","log","Provider","url","List","closeList","rows","listItems","setListItems","useContext","isHomeList","quickListItems","JSON","parse","localStorage","getItem","a","setItem","stringify","axios","method","headers","Authorization","accessToken","data","toast","error","response","errorText","filter","listItem","prevListItems","map","item","trim","uuidv4","length","LoginPage","history","auth","provider","GoogleAuthProvider","signInWithPopup","then","result","credentialFromResult","push","catch","code","message","email","CreateListModal","closeModal","handleNewList","setName","handleSubmit","ImportListModal","listId","setListId","MyListRow","listLength","handleNameChange","handleDelete","isDeleting","setIsDeleting","stopPropagation","navigator","clipboard","writeText","success","handleIdCopy","MyLists","lists","setLists","selectedList","setSelectedList","isListOpen","setIsListOpen","isListCreationOpen","setIsListCreationOpen","isLoading","setIsloading","isImportListOpen","setIsImportListOpen","isMounted","useRef","current","useIsMounted","res","handleListNameChange","newName","status","handleListDelete","toggleListCreationOpen","toggleImportListOpen","fetchLists","get","handleToggleSelectedList","Avatar","to","displayName","splitName","split","charAt","avatarName","Header","isSignedIn","handleLogout","selected","setSelected","loggedInElements","isSelected","pathname","PrivateRoute","RouteComponent","component","rest","render","routeProps","Home","Users","Profile","App","style","height","display","signOut","exact","path","position","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.438c3d62.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDca6FZnMHcWozVNc6zBceLxXkT4KG0Hx4\",\n    authDomain: \"grocerwes.firebaseapp.com\",\n    projectId: \"grocerwes\",\n    storageBucket: \"grocerwes.appspot.com\",\n    messagingSenderId: \"874487437075\",\n    appId: \"1:874487437075:web:1547724ac7eb979d9eece6\",\n    measurementId: \"G-5SR9QNYJVM\"\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport default app","import React, {useState} from \"react\"\nimport {ImCheckboxChecked, ImCheckboxUnchecked} from \"react-icons/im\"\nimport {BsTrash, BsFillCheckCircleFill} from \"react-icons/bs\"\nimport {FiEdit} from \"react-icons/fi\"\n\nconst ListRow = ({id, value, completed, toggleCompleted, removeListItem, updateListItem}) => {\n    const [isEditing, setIsEditing] = useState(false)\n    const [editedValue, setEditedValue] = useState(value)\n\n    const isCompleted = completed ? \"completed\" : \"\"\n    const checkbox = isCompleted ? <ImCheckboxChecked className=\"list-row-checkmark\" onClick={() => toggleCompleted(id)}/>\n                                 : <ImCheckboxUnchecked className=\"list-row-checkmark\" onClick={() => toggleCompleted(id)}/>\n\n    const toggleEditing = () => {\n        if(isEditing && value !== editedValue)\n            updateListItem(id, editedValue)\n        setIsEditing(!isEditing)\n    }\n\n    const handleEditedValueUpdate = (e) => {\n        setEditedValue(e.target.value)\n    }\n\n    return (\n        <div className=\"list-row-container\">\n            <div>\n                {checkbox}\n                { isEditing ? <input type=\"text\" value={editedValue} onChange={handleEditedValueUpdate}/>\n                            : value}\n            </div>\n            <div className=\"list-row-options\">\n                <BsTrash onClick={() => removeListItem(id)}/>\n                { isEditing ? <BsFillCheckCircleFill onClick={() => toggleEditing()}/>\n                            : <FiEdit onClick={() => toggleEditing()}/>}\n            </div>\n        </div>\n    )\n}\n\nexport default ListRow","import React, {useState} from \"react\"\nimport {BsPlusSquareFill} from \"react-icons/bs\"\n\nconst ListForm = ({addListItem, list}) => {\n    const [itemName, setItemName] = useState(\"\")\n    const [listName, setListName] = useState(list.id === \"1\" ? \"Quick List\" : list.name)\n\n    const handleChange = (e) => {\n        setItemName(e.target.value)\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        addListItem(itemName)\n        setItemName(\"\")\n    }\n\n    return (\n        <div className=\"list-form-container\">\n            {listName}\n            <form onSubmit={onSubmit} className=\"list-form\">\n                <input\n                    type=\"text\"\n                    value={itemName}\n                    onChange={handleChange}\n                    placeholder=\"Name of item\">\n                </input>\n                <BsPlusSquareFill onClick={onSubmit}/>\n            </form>\n        </div>\n    )\n}\n\nexport default ListForm","import React, {useEffect, useState} from \"react\"\nimport {getAuth} from \"firebase/auth\"\n\nexport const AuthContext = React.createContext()\n\nexport const AuthProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null)\n    const [pending, setPending] = useState(true)\n\n    useEffect(() => {\n        const auth = getAuth();\n        auth.onAuthStateChanged((user) => {\n            console.log(user)\n            setCurrentUser(user)\n            setPending(false)\n        })\n    }, [])\n\n    if(pending){\n        return <h1>Loading...</h1>\n    }\n\n    return (\n        <AuthContext.Provider\n            value={{currentUser}}\n        >\n            {children}    \n        </AuthContext.Provider>\n    )\n}","const url = () => {\n    if(process.env.NODE_ENV === \"development\"){\n        return \"http://localhost:3001/\"\n    }\n    else{\n        return \"https://grocerwes.herokuapp.com/\"\n    }\n}\n\nexport default url()","import React, {useState, useEffect, useContext} from \"react\"\nimport ListRow from \"./ListRow\"\nimport ListForm from \"./ListForm\"\nimport {v4 as uuidv4} from \"uuid\"\nimport {toast} from \"react-toastify\"\nimport {BiArrowBack} from 'react-icons/bi'\nimport {AuthContext} from \"../../Auth\"\nimport axios from \"axios\"\nimport url from \"../../config/url\"\n\nconst List = ({closeList, list = {id:\"1\",rows:[]}}) => {\n    //{id, value, completed}\n    const [listItems, setListItems] = useState(list.rows || [])\n    const {currentUser} = useContext(AuthContext)\n    const isHomeList = (list.id === \"1\") ? true : false\n\n    useEffect(() => {\n        if(isHomeList){\n            const quickListItems = JSON.parse(localStorage.getItem(\"quick-list-items\"))\n            if(quickListItems)\n                setListItems(quickListItems)\n        }\n    }, [])\n\n    useEffect(() => {\n        (async () => {\n            if(isHomeList){\n                localStorage.setItem(\"quick-list-items\", JSON.stringify(listItems))\n            } else{\n                try{\n                    console.log(\"hello?\")\n                    console.log(url)\n                    await axios({\n                        method: \"PUT\",\n                        url: `${url}api/lists/${list.id}`,\n                        headers: {\n                            Authorization: \"Bearer \" + currentUser.accessToken\n                        },\n                        data: {\n                            rows: listItems\n                        }\n                    })\n                }catch(error){\n                    toast.error(error.response.data.errorText)\n                }\n            }\n        })()\n    }, [listItems])\n\n    const addListItem = (value) => {\n        if(value.trim()){\n            setListItems([...listItems, {value: value, id: uuidv4(), completed: false}])\n        }else{\n            toast.error(\"List item cannot be empty!\")\n        }\n    }\n\n    const removeListItem = (id) => {\n        setListItems(listItems.filter(listItem => listItem.id !== id))\n        if(!isHomeList){\n\n        }\n    }\n\n    const updateListItem = (id, value) => {\n        const prevListItems = [...listItems]\n        setListItems(prevListItems.map(item => {\n            if(item.id === id)\n                item.value = value\n            return item\n        }))\n    }\n\n    const toggleCompleted = (id) => {\n        const prevListItems = [...listItems]\n        setListItems(prevListItems.map(item => {\n            if(item.id === id)\n                item.completed = !item.completed\n            return item\n        }))\n    }\n\n    const goBack = () => {\n        if(closeList) closeList()\n    }\n\n    return (\n        <div className=\"list-container\">\n            {!isHomeList && <div className={\"back-button\"} onClick={goBack}><BiArrowBack/></div>}\n            <ListForm list={list} addListItem={addListItem}/>\n            {\n                listItems.length > 0 && \n                <ul className=\"list-items\">\n                    {\n                        listItems.map(({value, id, completed}) => {\n                            return (<li key={id}><ListRow id={id} value={value} completed={completed} \n                            toggleCompleted={toggleCompleted}\n                            removeListItem={removeListItem}\n                            updateListItem={updateListItem}/></li>)\n                        })\n                    }\n                </ul>\n            }\n        </div>\n    )\n}\n\nexport default List","import {useState, useContext} from \"react\"\nimport {AuthContext} from \"../Auth\"\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport {Redirect} from \"react-router-dom\"\nimport {FcGoogle} from \"react-icons/fc\"\n\nconst LoginPage = ({history}) => {\n    const currentUser = useContext(AuthContext)\n    \n    const handleGoogleLogin = () => {\n        const auth = getAuth()\n        const provider = new GoogleAuthProvider();\n\n        signInWithPopup(auth, provider)\n        .then((result) => {\n            const credential = GoogleAuthProvider.credentialFromResult(result);\n            const token = credential.accessToken;\n            // The signed-in user info.\n            const user = result.user;\n            history.push(\"/\")\n        }).catch((error) => {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            // The email of the user's account used.\n            const email = error.email;\n        });\n    }\n\n    if(currentUser) {\n        //return <Redirect to=\"/\" />\n    }\n\n    return (\n        <div className=\"login-page\">\n            <h1>Log in with Google</h1>\n            <FcGoogle onClick={handleGoogleLogin}>Login with google</FcGoogle>\n        </div>\n    )\n}\n\nexport default LoginPage","import {useState} from \"react\"\nimport {IoClose} from \"react-icons/io5\"\nimport { toast } from 'react-toastify';\n\nconst CreateListModal = ({closeModal, handleNewList}) => {\n    const [name, setName] = useState(\"\")\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        if(name !== \"\"){\n            await handleNewList(name, \"\")\n            closeModal()\n        }else{\n            toast.error(\"Name cannot be empty!\")\n        }\n    }\n\n    return (\n        <div className=\"modal\">\n            <form onSubmit={handleSubmit}>\n                <IoClose onClick={closeModal}/> \n                <h1>Create List</h1>\n                <div className=\"modal-actions\">\n                    <input type=\"text\" placeholder=\"Enter name...\" value={name} onChange={(e) => setName(e.target.value)}/>\n                    <button>Create</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default CreateListModal","import {useState} from \"react\"\nimport {IoClose} from \"react-icons/io5\"\nimport { toast } from 'react-toastify';\n\nconst ImportListModal = ({closeModal, handleNewList}) => {\n    const [listId, setListId] = useState(\"\")\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        if(listId !== \"\"){\n            await handleNewList(\"\", listId)\n            closeModal()\n        }else{\n            toast.error(\"List ID cannot be empty!\")\n        }\n    }\n\n    return (\n        <div className=\"modal\">\n            <form onSubmit={handleSubmit}>\n                <h1>Import List</h1>\n                <div className=\"modal-actions\">\n                    <input type=\"text\" placeholder=\"Enter list ID...\" value={listId} onChange={(e) => setListId(e.target.value)}/>\n                    <button>Import</button>\n                </div>\n                <IoClose onClick={closeModal}/>\n            </form>\n        </div>\n    )\n}\n\nexport default ImportListModal","import {useState} from \"react\"\nimport {BsTrash, BsFillCheckCircleFill} from \"react-icons/bs\"\nimport {FiEdit, FiShare} from \"react-icons/fi\"\nimport {toast} from \"react-toastify\"\n\n\nconst MyListRow = ({id, name, listLength, handleNameChange, handleDelete}) => {\n    const [editedValue, setEditedValue] = useState(name)\n    const [isEditing, setIsEditing] = useState(false)\n    const [isDeleting, setIsDeleting] = useState(false)\n\n    const toggleEditing = (e) => {\n        e.stopPropagation()\n        if(isEditing && name !== editedValue)\n            handleNameChange(id, editedValue)\n        setIsEditing(!isEditing)\n    }\n\n    const handleIdCopy = (e) => {\n        e.stopPropagation()\n        navigator.clipboard.writeText(id).then(() => {})\n        toast.success(\"List ID copied to the clipboard!\")\n    }\n\n    const onClickDelete = (e) => {\n        e.stopPropagation()\n        setIsDeleting(true); \n        if(!isDeleting) {\n            handleDelete(id)\n        }\n    }\n\n    return (\n        <div className=\"my-list-row-container\">\n            <div>\n                {isEditing ? <input type=\"text\" value={editedValue} \n                onChange={(e) => setEditedValue(e.target.value)}\n                onClick={(e) => e.stopPropagation()}\n                />\n                : <>{name} <span className=\"list-length\">({listLength})</span></>\n                }\n                \n            </div>\n            <div className=\"action-buttons\">\n                <FiShare onClick={(e) => handleIdCopy(e)}/>\n                <BsTrash onClick={onClickDelete}/>\n                { isEditing ? <BsFillCheckCircleFill onClick={(e) => toggleEditing(e)}/>\n                            : <FiEdit onClick={(e) => toggleEditing(e)}/>}\n            </div>\n        </div>\n    )\n}\n\nexport default MyListRow","import {useState, useEffect, useContext, useRef} from \"react\"\nimport {FaSpinner} from \"react-icons/fa\"\nimport {AuthContext} from \"../../Auth\"\nimport axios from \"axios\"\nimport CreateListModal from \"../modals/CreateListModal\"\nimport ImportListModal from \"../modals/ImportListModal\"\nimport MyListRow from \"./MyListRow\"\nimport { toast } from 'react-toastify';\nimport List from \"../List/List\"\nimport url from \"../../config/url\"\n\nconst useIsMounted = () => {\n    const isMounted = useRef(false)\n    useEffect(() => {\n        isMounted.current = true\n        return () => {\n           isMounted.current = false \n        }\n    }, [])\n    return isMounted\n}\n\n\nconst MyLists = () => {\n    const [lists, setLists] = useState([])\n    const [selectedList, setSelectedList] = useState({})\n    const [isListOpen, setIsListOpen] = useState(false)\n    const [isListCreationOpen, setIsListCreationOpen] = useState(false)\n    const [isLoading, setIsloading] = useState(false)\n    const [isImportListOpen, setIsImportListOpen] = useState(false)\n    const {currentUser} = useContext(AuthContext)\n    const isMounted = useIsMounted()\n\n    const handleToggleSelectedList = (list) => {\n        if(isListOpen){\n            setIsListOpen(false)\n            setSelectedList({})\n        }else{\n            setSelectedList(list)\n            setIsListOpen(true)\n        }\n    }\n\n    const handleNewList = async (name=\"\", listId=\"\") => {\n        try{\n            const res = await axios({\n                method: \"POST\",\n                url: `${url}api/lists`,\n                headers: {\n                    Authorization: \"Bearer \" + currentUser.accessToken\n                },\n                data: {\n                    name: name,\n                    listId: listId\n                }\n            })\n            if(res.data.list)\n                setLists([...lists, res.data.list])\n        }catch(error){\n            toast.error(error.response.data.errorText)\n        }\n        setIsListCreationOpen(false)\n    }\n\n    const handleListNameChange = async (id, newName) => {\n        try{\n            const res = await axios({\n                method: \"PUT\",\n                url: `${url}api/lists/${id}`,\n                headers: {\n                    Authorization: \"Bearer \" + currentUser.accessToken\n                },\n                data: {\n                    name: newName\n                }\n            })\n            if(res.status === 200 && isMounted.current) {\n                setLists([...lists.map((list) => {\n                    if(list.id === id) {\n                        list.name = newName\n                    }\n                    return list\n                })])\n            }\n               \n        }catch(error){\n            toast.error(error.response.data.errorText)\n        }\n    }\n\n    const handleListDelete = async (id) => {\n        try{\n            await axios({\n                method: \"DELETE\",\n                url: `${url}api/lists/${id}`,\n                headers: {\n                    Authorization: \"Bearer \" + currentUser.accessToken\n                }\n            })\n            if(isMounted.current) setLists(lists.filter(list => list.id !== id))\n        }catch(error){\n            toast.error(error.response.data.errorText)\n        }\n    }\n\n    const toggleListCreationOpen = () => {\n        setIsListCreationOpen(!isListCreationOpen)\n    }\n\n    const toggleImportListOpen = () => {\n        setIsImportListOpen(!isImportListOpen)\n    }\n\n    const fetchLists = async () => {\n        try{\n            setIsloading(true)\n            console.log(url)\n            const res = await axios.get(`${url}api/lists`, {\n                headers: {\n                    Authorization: \"Bearer \" + currentUser.accessToken\n                }\n            })\n\n            if(res.data.lists && isMounted.current) {\n                setIsloading(false)\n                setLists([...res.data.lists])\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    const handleCloseList = () => {\n        setIsListOpen(false)\n        fetchLists()\n    }\n\n    useEffect(() => {\n        fetchLists()\n    }, [])\n\n    \n\n    \n\n    return (\n        <div className=\"my-lists-container\">\n            {isListCreationOpen && <CreateListModal closeModal={toggleListCreationOpen} handleNewList={handleNewList}/>}\n            {isImportListOpen && <ImportListModal closeModal={toggleImportListOpen} handleNewList={handleNewList}/>}\n            {\n                isListOpen ? <List list={selectedList} closeList={handleCloseList}/> \n                :   <>\n                        <div className=\"button-container\">\n                            <button onClick={toggleListCreationOpen}>Add new</button>\n                            <button onClick={toggleImportListOpen}>Import</button>\n                        </div>\n                        <ul className=\"lists-container\">\n                            {isLoading && <FaSpinner className={\"loading\"}/>}\n                            {\n                                !isLoading && lists.map(list => {\n                                    return(\n                                        <li className=\"list-row\" onClick={() => handleToggleSelectedList(list)} key={list.id}>\n                                        <MyListRow \n                                            id={list.id} \n                                            name={list.name} \n                                            listLength={list.rows.length} \n                                            handleNameChange={handleListNameChange} \n                                            handleDelete={handleListDelete}\n                                        />\n                                        </li>\n                                        \n                                    )\n                                })\n                            }\n                        </ul>\n                    </>\n            }\n        </div>\n    )\n}\n\nexport default MyLists","import {useContext} from \"react\"\nimport {AuthContext} from \"../Auth\"\nimport {Link} from \"react-router-dom\"\n\nconst Avatar = () => {\n    const {currentUser} = useContext(AuthContext)\n\n    const avatarName = (displayName) => {\n        console.log(currentUser)\n        const splitName = displayName.split(\" \")\n        if(splitName.length >= 2)\n            return splitName[0].charAt(0)+splitName[1].charAt(0)\n        else\n            return splitName[0].charAt(0)\n    }\n\n    return (\n        <div className=\"avatar\">\n            {currentUser && \n                <Link to=\"/profile\">{avatarName(currentUser.displayName)}</Link>\n            }\n        </div>\n    )\n}\n\nexport default Avatar","import {Link} from \"react-router-dom\"\nimport {AuthContext} from \"../Auth\"\nimport {useContext, useState} from \"react\"\nimport Avatar from \"./Avatar\"\n\nconst Header = ({isSignedIn=false, handleLogout}) => {\n    const {currentUser} = useContext(AuthContext)\n    const [selected, setSelected] = useState(\"\")\n\n    const loggedInElements = <>\n        <li>\n            <a onClick={handleLogout}>Logout</a>\n        </li>\n        <Avatar/>\n    </>\n\n    const isSelected = (pathname) => {\n        if(pathname === selected)\n            return \"selected\"\n        else\n            return \"\"\n    }\n\n    return (\n        <nav className=\"header\">\n            <div>\n                <ul>\n                    <li>\n                        <Link to=\"/\" className={isSelected(\"/\")} onClick={() => setSelected(\"/\")}>Home</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/lists\" className={isSelected(\"/lists\")} onClick={() => setSelected(\"/lists\")}>Lists</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/homes\" className={isSelected(\"/homes\")} onClick={() => setSelected(\"/homes\")}>Homes</Link>\n                    </li>\n                </ul>\n            </div>\n            <div>\n                <ul>\n                    {currentUser ? loggedInElements\n                        : <li>\n                            <Link to=\"/login\">Login</Link>\n                        </li>\n                    }\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default Header","import React, {useContext} from \"react\"\nimport {Route, Redirect} from \"react-router-dom\"\nimport {AuthContext} from \"./Auth\"\n\nconst PrivateRoute = ({ component:RouteComponent, ...rest}) => {\n    const {currentUser} = useContext(AuthContext)\n    return (\n        <Route\n            {...rest}\n            render={routeProps => \n                !!currentUser ? (\n                    <RouteComponent {...routeProps}/>\n                ) : (\n                    <Redirect to={\"/login\"}/>\n                )\n            }\n        />\n    )\n}\n\nexport default PrivateRoute","import List from \"./components/List/List\"\nimport React from \"react\";\nimport LoginPage from \"./components/LoginPage\"\nimport MyLists from \"./components/MyLists/MyLists\"\nimport Header from \"./components/Header\"\nimport {AuthProvider} from \"./Auth\"\nimport PrivateRoute from \"./PrivateRoute\"\nimport {getAuth} from \"firebase/auth\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport {ToastContainer} from \"react-toastify\"\n\nfunction App() {\n\n  const handleLogout = () => {\n    getAuth().signOut()\n  }\n\n    return (\n      <AuthProvider>\n        <Router>\n          <div style={{height: \"100%\", display: \"flex\", \"flexDirection\":\"column\"}}>\n            <Header handleLogout={handleLogout}/>\n    \n            <PrivateRoute exact path=\"/lists\" component={MyLists}/>\n            <PrivateRoute exact path=\"/homes\" component={Users}/>\n            <PrivateRoute exact path=\"/profile\" component={Profile}/>\n            <Route exact path=\"/login\" component={LoginPage}/>\n            <Route exact path=\"/\" component={Home}/>\n\n            <ToastContainer position=\"bottom-right\"/>\n          </div>\n        </Router>\n      </AuthProvider>\n      );\n  \n}\n\nfunction Home() {\n    return (\n        <div className=\"app\">\n            <List/>\n        </div>\n      );\n  }\n  \n  function Users() {\n    return <h2>Users</h2>;\n  }\n\n  function Profile() {\n    return <h2>Profile</h2>\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./config/firebase-config.js\"\nimport App from './App';\nimport \"./Styles.css\"\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}